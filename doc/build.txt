Ironclad's build process deserves a brief discussion. 

32-BIT WINDOWS REQUIREMENTS:

* IronPython 2.6
* mingw or cygwin (including gcc and make)
* note that mingw needs to be tweaked; the setup directory will contain a 
  script to patch/unpatch your mingw install.
* pexports
* nasm
* .NET 2.0 Service Pack 1 (csc, specifically)
** note that Vista users need to install Vista SP1, or .NET 3.5,
   to get .NET 2.0 SP1
* Python 2.6

If you are using cygwin you should set the environment variable 
IRONCLAD_USE_CYGWIN to YES.

32-BIT LINUX REQUIREMENTS:

Most importantly:

* The time and inclination to fix issues #12 and #13 at
http://code.google.com/p/ironclad/issues/list (patches very very welcome).

Assuming you have the above, here follows everything else you should need:

* IronPython 2.0 release candidate 2 (2.0.0.0)
* gcc and make
* objdump
* nasm
* "recent" Mono (with gmcs compiler)
* Python 2.5, with -dev package

BUILDING

Ironclad's build process is configured by 'Makefile.config' in the top-
level directory. Change the value of variables NET, OS, and IPY_DIR 
appropriately.

Running make in the top-level directory should do the following:

* Run 'tools/buildstub.py' to (eventually) create the stub library 
  'build/ironclad/python26.dll' from an existing (real) python26.dll and the 
  contents of 'stub/'
* Run 'tools/generatepython25mapper.py' to create various files in 'src/' from 
  the contents of 'src/python25mappercomponents/'
* Run 'tools/generatedispatcher.py' to create several C# files --not just the 
  Dispatcher, I'm afraid -- from the contents of 'stub/' and 'tools/'
* Compile the contents of 'src/' to create 'build/ironclad/ironclad.dll'

At this point, the project is built and may even be usable. However, make will 
also build some test data, and run several tests; we expect all these to pass,
excluding any parts of 'tests/functionalitytest.py' which import modules you
haven't installed on your system.

TESTING

You should ensure that IRONPYTHONPATH is set correctly. In particular, it
should include the directory containing .pyd files.

In order for all tests to run, numpy 1.3, scipy 0.7, matplotlib 0.98, h5py 1.2.1,
and pysvn 1.6 must be installed - and the Python25 distribution's Dlls, Lib and
Lib/site-packages should be on your path - but this is not otherwise necessary.

If the directory containing your foo installation is on your sys.path, it
should be possible to run 'ipy tests\extra\footests.py' from the top-level
directory, which will test foo far more comprehensively than 
'tests/functionalitytest.py' can. Nose must be installed, but will not actually 
be used.


