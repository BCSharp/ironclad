###############################################################################
#### failures, probably worth worrying about

# weird failures
# (cluster)
test_hierarchy.TestIsIsomorphic.test_is_isomorphic_5A
test_hierarchy.TestIsIsomorphic.test_is_isomorphic_5B
test_hierarchy.TestIsIsomorphic.test_is_isomorphic_5C
test_hierarchy.TestIsIsomorphic.test_is_isomorphic_6A
test_hierarchy.TestIsIsomorphic.test_is_isomorphic_6B
test_hierarchy.TestIsIsomorphic.test_is_isomorphic_6C

# (cluster)
#test_vq.TestKMean.test_kmeans2_init # occasional horror

# (fftpack)
test_pseudo_diffs # almost all just fail -- mostly arrays of zeros

# (integrate)
test_integrate.TestOde.test_zvode # fails, not yet analysed

# (io)
test_array_import.TestReadArray # deprecated, fail unpredictably due to 'file being used by another process'
test_array_import.TestReadArray.test_complex # PyFloat_FromString
io\matlab\tests\test_mio.py # even with gzip, many errors, some serious enough that I can't call this 'supported'

# (odr)
test_odr.TestODR.test_explicit # segfault

# (optimize)
test_zeros.TestBasic # x4: in _bisect: ValueError: f(a) and f(b) must have different signs

# (sparse) something returns null
test_base.TestCSC.test_solve
test_base.TestCSR.test_solve
test_base.TestDOK.test_solve
test_base.TestLIL.test_solve

# (special)
test_basic.TestBessel.test_ynp_zeros_large_order # KnownFailure
test_basic.TestBessel.test_yv_cephes_vs_amos # KnownFailure

# (stats)
test_mstats_basic.TestCorr.test_pearsonr # divide by 0 in wrong runtime (if it happened in C code, we'd be fine)


###############################################################################
#### work fine, but take way too long (>>30s each)

# (sparse)
test_construct.TestConstructUtils.test_kron # very long
test_construct.TestConstructUtils.test_kronsum # very long
test_spfuncs.TestSparseFunctions.test_count_blocks

# only *some* test_add_sub and test_mu methods take ages; sadly, nose 
# doesn't report them in a way that lets me disable them precisely
test_base._TestArithmetic.test_add_sub
test_base._TestArithmetic.test_mu

# (spatial)
test_distance.TestPdist.test_pdist_canberra_match
test_distance.TestPdist.test_pdist_chebychev_iris_nonC
test_distance.TestPdist.test_pdist_chebychev_random_nonC
test_distance.TestPdist.test_pdist_cityblock_iris_nonC
test_distance.TestPdist.test_pdist_correlation_iris_nonC
test_distance.TestPdist.test_pdist_cosine_iris_nonC
test_distance.TestPdist.test_pdist_dhamming_random_nonC
test_distance.TestPdist.test_pdist_dice_match
test_distance.TestPdist.test_pdist_djaccard_random_nonC
test_distance.TestPdist.test_pdist_euclidean_iris_nonC
test_distance.TestPdist.test_pdist_jaccard_match
test_distance.TestPdist.test_pdist_kulsinski_match
test_distance.TestPdist.test_pdist_matching_match
test_distance.TestPdist.test_pdist_minkowski_iris_nonC # note: there are 2 tests with this name
test_distance.TestPdist.test_pdist_rogerstanimoto_match
test_distance.TestPdist.test_pdist_russellrao_match
test_distance.TestPdist.test_pdist_seuclidean_iris_nonC
test_distance.TestPdist.test_pdist_sokalmichener_match
test_distance.TestPdist.test_pdist_sokalsneath_match
test_distance.TestPdist.test_pdist_yule_match

# (stats) most parts of these files work, but they take *forever*
# also, it's tricky to disable individual ones, whether failing or just slow
stats\tests\test_continuous_basic.py
stats\tests\test_continuous_extra.py
stats\tests\test_discrete_basic.py
stats\tests\test_distributions.py

