# This file is used by tools/generatemapper.py

# columns in order: 
# cpython type | ironpython type
# optional dict in 3rd col allows for customisation

PyBaseObject_Type   TypeCache.Object        {"tp_alloc": "PyType_GenericAlloc", "tp_new": "PyType_GenericNew", "tp_init": "IC_PyBaseObject_Init", "tp_dealloc": "IC_PyBaseObject_Dealloc", "tp_free": "PyObject_Free", "tp_str": "PyObject_Str", "tp_repr": "PyObject_Repr", "tp_basicsize": "PyObject"}
PyType_Type         TypeCache.PythonType    {"tp_new": "IC_PyType_New", "tp_basicsize": "PyTypeObject"}
_PyNone_Type        TypeCache.Null
PySlice_Type        Builtin.slice           {"tp_dealloc": "IC_PySlice_Dealloc", "tp_basicsize": "PySliceObject"}
PyLong_Type         TypeCache.BigInteger    {"tp_as_number": "AddNumberMethodsWithIndex", "tp_basicsize": "PyLongObject"}
PyFloat_Type        TypeCache.Double        {"tp_as_number": "AddNumberMethodsWithoutIndex", "tp_new": "IC_PyFloat_New", "tp_basicsize": "PyFloatObject"}
PyComplex_Type      TypeCache.Complex       {"tp_as_number": "AddNumberMethodsWithoutIndex", "tp_basicsize": "PyComplexObject"}
PyDict_Type         TypeCache.Dict          {"tp_init": "IC_PyDict_Init"}
PyList_Type         TypeCache.PythonList    {"tp_dealloc": "IC_PyList_Dealloc", "tp_basicsize": "PyListObject"}
PyTuple_Type        TypeCache.PythonTuple   {"tp_dealloc": "IC_PyTuple_Dealloc", "tp_basicsize": "PyTupleObject", "tp_itemsize": "IntPtr", "tp_iter": "IC_tuple_iter"}
PyMethod_Type       TypeCache.Method        {"tp_dealloc": "IC_PyMethod_Dealloc", "tp_basicsize": "PyMethodObject"}
PyFunction_Type     TypeCache.Function      {"tp_basicsize": "PyFunctionObject"}
PySet_Type          TypeCache.Set
PyFrozenSet_Type    TypeCache.FrozenSet
PyMemoryView_Type   Builtin.memoryview
PyByteArray_Type    Builtin.bytearray
PyUnicode_Type      TypeCache.String
