# This file is used by tools/generateapi.py and tools/generatestub.py

# this file contains C function prototypes for managed functions that need
# to be called from the stub library. It's used to generate a header for 
# inclusion by C code, and in PythonApi generation.

# managed implementations need not exist

destructor IC_PyBaseObject_Dealloc;
destructor IC_PyInstance_Dealloc;
destructor IC_PyList_Dealloc;
destructor IC_PyMethod_Dealloc;
destructor IC_PySlice_Dealloc;
destructor IC_PyTuple_Dealloc;

newfunc IC_PyFloat_New;
newfunc IC_PyInt_New;
newfunc IC_PyType_New;

initproc IC_PyBaseObject_Init;
initproc IC_PyDict_Init;

readbufferproc IC_str_getreadbuffer;
writebufferproc IC_str_getwritebuffer;
segcountproc IC_str_getsegcount;

reprfunc IC_PyString_Str;
binaryfunc IC_PyString_Concat_Core;

# the rest are related to the awful hacks in Objects/fileobject.c

PyObject *IC_file_close(PyFileObject *f);
void IC_file_dealloc(PyFileObject *f);
PyObject *IC_file_flush(PyFileObject *f);
PyObject *IC_file_iternext(PyFileObject *f);
PyObject *IC_file_read(PyFileObject *f, PyObject *args);
PyObject *IC_file_readinto(PyFileObject *f, PyObject *args);
PyObject *IC_file_readline(PyFileObject *f, PyObject *args);
PyObject *IC_file_readlines(PyFileObject *f, PyObject *args);
PyObject *IC_file_seek(PyFileObject *f, PyObject *args);
PyObject *IC_file_tell(PyFileObject *f);
PyObject *IC_file_truncate(PyFileObject *f, PyObject *args);
PyObject *IC_file_write(PyFileObject *f, PyObject *args);
PyObject *IC_file_writelines(PyFileObject *f, PyObject *args);

FILE *IC_PyFile_AsFile(PyObject *f);
int IC_PyFile_SetEncodingAndErrors(PyObject *f, const char *enc, char* errors);
int IC_PyFile_WriteObject(PyObject *v, PyObject *f, int flags);
int IC_PyFile_WriteString(const char *s, PyObject *f);

